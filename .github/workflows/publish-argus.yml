name: Publish Argus

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PUBLISH_ACCESS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for Frontend
        run: |
          cd Frontend
          npm ci

      - name: Build Frontend
        run: |
          cd Frontend
          npm run build
          
      - name: Prepare build output for Aspire
        run: |
          mkdir -p "publish/static/"
          cp -r Frontend/build/* "publish/static/"

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: '9.x'

      - name: Install Aspire CLI
        run: dotnet tool install --global aspire.cli --prerelease

      - name: Run Aspire Publish
        run: aspire publish -p docker-compose -o artifacts
        working-directory: Backend

      - name: Move artifacts to publish dir
        run: |
          cp Backend/stream.conf publish/stream.conf
          cp Backend/nginx.conf publish/nginx.conf
          cp Backend/artifacts/docker-compose.yaml publish/docker-compose.yaml

      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            publish/

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag and Push Container Images
        run: |
          OWNER_LC="${{ github.repository_owner }}"
          OWNER_LC="${OWNER_LC,,}"
          SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's#[^a-zA-Z0-9._-]#-#g')
          for image in api controller; do
            docker tag $image:latest ghcr.io/${OWNER_LC}/$image:latest
            docker push ghcr.io/${OWNER_LC}/$image:latest
          done
  deploy:
    runs-on: self-hosted
    needs: build
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: "Deploy"
        run: |
          cd Argus/
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker compose down && docker compose up -d
        env:
          POSTGRESSERVER_PASSWORD: "${{ secrets.POSTGRESSERVER_PASSWORD }}"
          CONTROLLER_IMAGE: "ghcr.io/zeroed-technology/controller:latest"
          API_IMAGE: "ghcr.io/zeroed-technology/api:latest"